
package com.cmos.ipa.service.video_surveillance.videoInputV1;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-05-12T18:18:59.648+08:00
 * Generated source version: 3.1.6
 * 
 */
public final class VideoInputPortType_VideoInput_Client {

    private static final QName SERVICE_NAME = new QName("urn:schemas-pelco-com:service:VideoInput:1", "VideoInput");

    private VideoInputPortType_VideoInput_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = VideoInput.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        VideoInput ss = new VideoInput(wsdlURL, SERVICE_NAME);
        VideoInputPortType port = ss.getVideoInput();  
        
        {
        System.out.println("Invoking getActiveSessionIds...");
        SessionList _getActiveSessionIds__return = port.getActiveSessionIds();
        System.out.println("getActiveSessionIds.result=" + _getActiveSessionIds__return);


        }
        {
        System.out.println("Invoking disconnect...");
        String _disconnect_sessionId = "";
        port.disconnect(_disconnect_sessionId);


        }
        {
        System.out.println("Invoking getActiveSessions...");
        javax.xml.ws.Holder<Integer> _getActiveSessions_activeSessions = new javax.xml.ws.Holder<Integer>();
        javax.xml.ws.Holder<Integer> _getActiveSessions_maxSessions = new javax.xml.ws.Holder<Integer>();
        port.getActiveSessions(_getActiveSessions_activeSessions, _getActiveSessions_maxSessions);

        System.out.println("getActiveSessions._getActiveSessions_activeSessions=" + _getActiveSessions_activeSessions.value);
        System.out.println("getActiveSessions._getActiveSessions_maxSessions=" + _getActiveSessions_maxSessions.value);

        }
        {
        System.out.println("Invoking getSessionParameters...");
        String _getSessionParameters_sessionId = "";
        StreamParameters _getSessionParameters__return = port.getSessionParameters(_getSessionParameters_sessionId);
        System.out.println("getSessionParameters.result=" + _getSessionParameters__return);


        }
        {
        System.out.println("Invoking connect...");
        StreamParameters _connect_streamParametersVal = null;
        javax.xml.ws.Holder<StreamParameters> _connect_streamParameters = new javax.xml.ws.Holder<StreamParameters>(_connect_streamParametersVal);
        port.connect(_connect_streamParameters);

        System.out.println("connect._connect_streamParameters=" + _connect_streamParameters.value);

        }

        System.exit(0);
    }

}
