
package com.cmos.ipa.service.video_surveillance.videoAnalyticsV2;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-05-12T18:18:56.764+08:00
 * Generated source version: 3.1.6
 * 
 */
public final class VideoAnalyticsPortType_VideoAnalytics2_Client {

    private static final QName SERVICE_NAME = new QName("urn:schemas-pelco-com:service:VideoAnalytics:2", "VideoAnalytics");

    private VideoAnalyticsPortType_VideoAnalytics2_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = VideoAnalytics.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        VideoAnalytics ss = new VideoAnalytics(wsdlURL, SERVICE_NAME);
        VideoAnalyticsPortType port = ss.getVideoAnalytics2();  
        
        {
        System.out.println("Invoking executeProfile...");
        int _executeProfile_id = 0;
        port.executeProfile(_executeProfile_id);


        }
        {
        System.out.println("Invoking stopProfile...");
        int _stopProfile_profileId = 0;
        port.stopProfile(_stopProfile_profileId);


        }
        {
        System.out.println("Invoking getProfileList...");
        ProfileList _getProfileList__return = port.getProfileList();
        System.out.println("getProfileList.result=" + _getProfileList__return);


        }
        {
        System.out.println("Invoking getActiveProfile...");
        int _getActiveProfile__return = port.getActiveProfile();
        System.out.println("getActiveProfile.result=" + _getActiveProfile__return);


        }

        System.exit(0);
    }

}
