
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.cmos.ipa.service.video_surveillance.lensControlV1;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-05-12T18:18:18.119+08:00
 * Generated source version: 3.1.6
 * 
 */

@WebService(
                      serviceName = "LensControl",
                      portName = "LensControl",
                      targetNamespace = "urn:schemas-pelco-com:service:LensControl:1",
                      wsdlLocation = "file:a/LensControlV1.wsdl",
                      endpointInterface = "com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType")
                      
public class LensControlImpl implements LensControlPortType {

    private static final Logger LOG = Logger.getLogger(LensControlImpl.class.getName());

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#getMaxDigitalMag(*
     */
    public long getMaxDigitalMag() { 
        LOG.info("Executing operation getMaxDigitalMag");
        try {
            long _return = 0;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#getMaxAOV(*
     */
    public long getMaxAOV() { 
        LOG.info("Executing operation getMaxAOV");
        try {
            long _return = 0;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#stop(*
     */
    public void stop() { 
        LOG.info("Executing operation stop");
        try {
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#autoFocus(int  onOff )*
     */
    public void autoFocus(int onOff) { 
        LOG.info("Executing operation autoFocus");
        System.out.println(onOff);
        try {
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#getMaxMag(*
     */
    public long getMaxMag() { 
        LOG.info("Executing operation getMaxMag");
        try {
            long _return = 0;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#zoom(long  inOut )*
     */
    public void zoom(long inOut) { 
        LOG.info("Executing operation zoom");
        System.out.println(inOut);
        try {
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#focus(long  nearFar )*
     */
    public void focus(long nearFar) { 
        LOG.info("Executing operation focus");
        System.out.println(nearFar);
        try {
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#setMag(long  magnification )*
     */
    public void setMag(long magnification) { 
        LOG.info("Executing operation setMag");
        System.out.println(magnification);
        try {
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#autoIris(int  onOff )*
     */
    public void autoIris(int onOff) { 
        LOG.info("Executing operation autoIris");
        System.out.println(onOff);
        try {
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#getMaxOpticalMag(*
     */
    public long getMaxOpticalMag() { 
        LOG.info("Executing operation getMaxOpticalMag");
        try {
            long _return = 0;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#iris(long  openClose )*
     */
    public void iris(long openClose) { 
        LOG.info("Executing operation iris");
        System.out.println(openClose);
        try {
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.cmos.ipa.service.video_surveillance.lensControlV1.LensControlPortType#getMag(*
     */
    public long getMag() { 
        LOG.info("Executing operation getMag");
        try {
            long _return = 0;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
