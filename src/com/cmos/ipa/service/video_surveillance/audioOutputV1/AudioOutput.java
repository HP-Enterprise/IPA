package com.cmos.ipa.service.video_surveillance.audioOutputV1;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This service allows a client to query available and outgoing audio 
 * 			streams and to request connections to those streams.
 * 		
 *
 * This class was generated by Apache CXF 3.1.6
 * 2016-05-12T18:18:03.725+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "AudioOutput", 
                  wsdlLocation = "file:wsdl/AudioOutputV1.wsdl",
                  targetNamespace = "urn:schemas-pelco-com:service:AudioOutput:1") 
public class AudioOutput extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:schemas-pelco-com:service:AudioOutput:1", "AudioOutput");
    public final static QName AudioOutput = new QName("urn:schemas-pelco-com:service:AudioOutput:1", "AudioOutput");
    static {
        URL url = null;
        try {
            url = new URL("file:wsdl/AudioOutputV1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AudioOutput.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:a/AudioOutputV1.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AudioOutput(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AudioOutput(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AudioOutput() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public AudioOutput(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public AudioOutput(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public AudioOutput(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns AudioOutputPortType
     */
    @WebEndpoint(name = "AudioOutput")
    public AudioOutputPortType getAudioOutput() {
        return super.getPort(AudioOutput, AudioOutputPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AudioOutputPortType
     */
    @WebEndpoint(name = "AudioOutput")
    public AudioOutputPortType getAudioOutput(WebServiceFeature... features) {
        return super.getPort(AudioOutput, AudioOutputPortType.class, features);
    }

}
