
package com.cmos.ipa.service.video_surveillance.imagingConfigurationV1;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-05-12T18:18:15.373+08:00
 * Generated source version: 3.1.6
 * 
 */
public final class ImagingConfigurationPortType_ImagingConfiguration_Client {

    private static final QName SERVICE_NAME = new QName("http://www.pelco.com/api/ImagingConfiguration/1", "ImagingConfiguration");

    private ImagingConfigurationPortType_ImagingConfiguration_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = ImagingConfiguration.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        ImagingConfiguration ss = new ImagingConfiguration(wsdlURL, SERVICE_NAME);
        ImagingConfigurationPortType port = ss.getImagingConfiguration();  
        
        {
        System.out.println("Invoking getColorPalette...");
        ColorPalette _getColorPalette__return = port.getColorPalette();
        System.out.println("getColorPalette.result=" + _getColorPalette__return);


        }
        {
        System.out.println("Invoking getImageEnhancementLevel...");
        int _getImageEnhancementLevel__return = port.getImageEnhancementLevel();
        System.out.println("getImageEnhancementLevel.result=" + _getImageEnhancementLevel__return);


        }
        {
        System.out.println("Invoking setColorPalette...");
        ColorPalette _setColorPalette_colorPalette = null;
        port.setColorPalette(_setColorPalette_colorPalette);


        }
        {
        System.out.println("Invoking calibrateNow...");
        port.calibrateNow();


        }
        {
        System.out.println("Invoking getAllColorPalettes...");
        java.util.List<ColorPalette> _getAllColorPalettes__return = port.getAllColorPalettes();
        System.out.println("getAllColorPalettes.result=" + _getAllColorPalettes__return);


        }
        {
        System.out.println("Invoking getRecalibrationMode...");
        RecalibrationMode _getRecalibrationMode__return = port.getRecalibrationMode();
        System.out.println("getRecalibrationMode.result=" + _getRecalibrationMode__return);


        }
        {
        System.out.println("Invoking setRecalibrationMode...");
        RecalibrationMode _setRecalibrationMode_recalibrationMode = null;
        port.setRecalibrationMode(_setRecalibrationMode_recalibrationMode);


        }
        {
        System.out.println("Invoking getCalibrationInterval...");
        javax.xml.datatype.Duration _getCalibrationInterval__return = port.getCalibrationInterval();
        System.out.println("getCalibrationInterval.result=" + _getCalibrationInterval__return);


        }
        {
        System.out.println("Invoking setImageEnhancementLevel...");
        int _setImageEnhancementLevel_imageEnhancementLevel = 0;
        port.setImageEnhancementLevel(_setImageEnhancementLevel_imageEnhancementLevel);


        }
        {
        System.out.println("Invoking getSharpness...");
        ModeValuePair _getSharpness__return = port.getSharpness();
        System.out.println("getSharpness.result=" + _getSharpness__return);


        }
        {
        System.out.println("Invoking setSharpness...");
        ModeValuePair _setSharpness_sharpness = null;
        port.setSharpness(_setSharpness_sharpness);


        }
        {
        System.out.println("Invoking delayRecalibration...");
        javax.xml.datatype.Duration _delayRecalibration_calibrationDelay = null;
        port.delayRecalibration(_delayRecalibration_calibrationDelay);


        }
        {
        System.out.println("Invoking setCalibrationInterval...");
        javax.xml.datatype.Duration _setCalibrationInterval_calibrationInterval = null;
        port.setCalibrationInterval(_setCalibrationInterval_calibrationInterval);


        }

        System.exit(0);
    }

}
