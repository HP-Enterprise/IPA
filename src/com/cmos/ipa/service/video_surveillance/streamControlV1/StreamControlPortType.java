package com.cmos.ipa.service.video_surveillance.streamControlV1;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-05-12T18:18:46.188+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebService(targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", name = "StreamControlPortType")
@XmlSeeAlso({ObjectFactory.class})
public interface StreamControlPortType {

    /**
     * Starts a stream session at a specific location within the stream other than at the beginning of the stream session. It uses a time within the session time range to move to the frame.
     */
    @WebMethod(operationName = "Seek", action = "urn:schemas-pelco-com:service:StreamControl:1#Seek")
    @RequestWrapper(localName = "Seek", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.Seek")
    @ResponseWrapper(localName = "SeekResponse", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.SeekResponse")
    @WebResult(name = "seekTime", targetNamespace = "")
    public String seek(
            @WebParam(name = "sessionId", targetNamespace = "")
            String sessionId,
            @WebParam(name = "startTime", targetNamespace = "")
            String startTime
    );

    /**
     * Displays the next frame in the queue assuming that you have paused the stream.
     */
    @WebMethod(operationName = "FrameAdvance", action = "urn:schemas-pelco-com:service:StreamControl:1#FrameAdvance")
    @RequestWrapper(localName = "FrameAdvance", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.FrameAdvance")
    @ResponseWrapper(localName = "FrameAdvanceResponse", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.FrameAdvanceResponse")
    @WebResult(name = "streamPos", targetNamespace = "")
    public Integer frameAdvance(
            @WebParam(name = "sessionId", targetNamespace = "")
            String sessionId
    );

    /**
     * Displays the previous frame in the queue assuming that you have paused the stream.
     */
    @WebMethod(operationName = "FrameReverse", action = "urn:schemas-pelco-com:service:StreamControl:1#FrameReverse")
    @RequestWrapper(localName = "FrameReverse", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.FrameReverse")
    @ResponseWrapper(localName = "FrameReverseResponse", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.FrameReverseResponse")
    @WebResult(name = "streamPos", targetNamespace = "")
    public Integer frameReverse(
            @WebParam(name = "sessionId", targetNamespace = "")
            String sessionId
    );

    /**
     * Stores an alphanumeric mark that you define onto an NVR's hard drive that is mapped to a specific video frame within the session that you are viewing. This is used to recall that location in the session with a tag name.
     */
    @WebMethod(operationName = "MarkEvent", action = "urn:schemas-pelco-com:service:StreamControl:1#MarkEvent")
    @RequestWrapper(localName = "MarkEvent", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.MarkEvent")
    @ResponseWrapper(localName = "MarkEventResponse", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.MarkEventResponse")
    public void markEvent(
            @WebParam(name = "sessionId", targetNamespace = "")
            String sessionId,
            @WebParam(name = "mark", targetNamespace = "")
            String mark,
            @WebParam(name = "timeStamp", targetNamespace = "")
            String timeStamp
    );

    /**
     * Plays the stream backwards continuously.
     */
    @WebMethod(operationName = "Reverse", action = "urn:schemas-pelco-com:service:StreamControl:1#Reverse")
    @RequestWrapper(localName = "Reverse", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.Reverse")
    @ResponseWrapper(localName = "ReverseResponse", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.ReverseResponse")
    @WebResult(name = "streamPos", targetNamespace = "")
    public Integer reverse(
            @WebParam(name = "sessionId", targetNamespace = "")
            String sessionId,
            @WebParam(name = "speed", targetNamespace = "")
            float speed,
            @WebParam(name = "maxBytes", targetNamespace = "")
            int maxBytes,
            @WebParam(name = "actionVersion", targetNamespace = "")
            String actionVersion,
            @WebParam(name = "asyncId", targetNamespace = "")
            int asyncId
    );

    /**
     * Works the same as seek except that it uses a Event tag to move to a location rather than time.
     */
    @WebMethod(operationName = "SeekEvent", action = "urn:schemas-pelco-com:service:StreamControl:1#SeekEvent")
    @RequestWrapper(localName = "SeekEvent", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.SeekEvent")
    @ResponseWrapper(localName = "SeekEventResponse", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.SeekEventResponse")
    @WebResult(name = "seekTime", targetNamespace = "")
    public String seekEvent(
            @WebParam(name = "sessionId", targetNamespace = "")
            String sessionId,
            @WebParam(name = "mark", targetNamespace = "")
            String mark,
            @WebParam(name = "timeStamp", targetNamespace = "")
            String timeStamp,
            @WebParam(name = "next", targetNamespace = "")
            boolean next
    );

    /**
     * Halts playback associated with sessionId, leaving the data stream in the PAUSED state. However, if the stream is a shared stream, i.e. multicast, Pause will halt the stream if there is only 1 client connected to it.
     */
    @WebMethod(operationName = "Pause", action = "urn:schemas-pelco-com:service:StreamControl:1#Pause")
    @RequestWrapper(localName = "Pause", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.Pause")
    @ResponseWrapper(localName = "PauseResponse", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.PauseResponse")
    public void pause(
            @WebParam(name = "sessionId", targetNamespace = "")
            String sessionId,
            @WebParam(mode = WebParam.Mode.INOUT, name = "asyncId", targetNamespace = "")
            javax.xml.ws.Holder<Integer> asyncId
    );

    /**
     * Initiates forward playback of the data stream identified by sessionId.
     */
    @WebMethod(operationName = "Play", action = "urn:schemas-pelco-com:service:StreamControl:1#Play")
    @RequestWrapper(localName = "Play", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.Play")
    @ResponseWrapper(localName = "PlayResponse", targetNamespace = "urn:schemas-pelco-com:service:StreamControl:1", className = "com.cmos.ipa.service.video_surveillance.streamControlV1.PlayResponse")
    public void play(
            @WebParam(name = "sessionId", targetNamespace = "")
            String sessionId,
            @WebParam(name = "speed", targetNamespace = "")
            float speed,
            @WebParam(name = "maxBytes", targetNamespace = "")
            int maxBytes,
            @WebParam(name = "actionVersion", targetNamespace = "")
            String actionVersion,
            @WebParam(mode = WebParam.Mode.INOUT, name = "asyncId", targetNamespace = "")
            javax.xml.ws.Holder<Integer> asyncId,
            @WebParam(mode = WebParam.Mode.OUT, name = "streamPos", targetNamespace = "")
            javax.xml.ws.Holder<Integer> streamPos
    );
}
